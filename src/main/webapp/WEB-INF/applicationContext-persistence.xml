<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    ">

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="poolName" value="springHikariCP" />
		<property name="maximumPoolSize" value="20" />
		<!-- <prop key="idleTimeout"></prop> -->

		<property name="driverClassName" value="org.mariadb.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mariadb://localhost:3306/classicmodels" />
		<property name="dataSourceProperties">
			<props>
				<prop key="user">root</prop>
				<prop key="password"></prop>
				<prop key="useServerPrepStmts">true</prop>
				<prop key="prepStmtCacheSize">250</prop>
				<prop key="prepStmtCacheSqlLimit">2048</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy"> -->
	<!-- <constructor-arg ref="dmDataSource"/> -->
	<!-- </bean> -->

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--  enable some advanced features supported by Spring, usually in a vendor-specific manner -->
		<property name="JpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="packagesToScan" value="com.med.firstapp.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<prop key="hibernate.generate_statistics">false</prop>

				<!-- NOT SURE TO WORK (ALWAYS|AUTO|COMMIT|MANUAL)  -->
				<!-- <prop key="org.hibernate.flushMode">AUTO</prop> -->

				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<!-- ENABLE_SELECTIVE enables 2 level caching only for @Cacheable Entities -->
				<prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop>

				<!-- <prop name="javax.persistence.validation.mode">AUTO</prop>  -->
				<!-- By default, Bean Validation (and Hibernate Validator) is AUTO activated  if Bean Validation is present in the classpath.-->
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven />

	<jpa:repositories base-package="com.med.firstapp.dao" transaction-manager-ref="transactionManager" />

	<bean id="currentTimeDateTimeService" class="com.med.firstapp.provider.CurrentTimeDateTimeService" />
	<bean id="auditingDateTimeProvider" class="com.med.firstapp.provider.AuditingDateTimeProvider" />

	<bean id="auditorAware" class="com.med.firstapp.provider.AuditorAwareImpl" />

	<!-- date-time-provider-ref uses jpa data CurrentDateTimeProvider by default -->
	<jpa:auditing date-time-provider-ref="auditingDateTimeProvider" auditor-aware-ref="auditorAware" modify-on-creation="false" />


	<!-- 
	<context:property-placeholder location="classpath:persistence-mysql.properties" /> 
	@PropertySource(value = { "classpath:application.properties" })	
	-->
</beans>