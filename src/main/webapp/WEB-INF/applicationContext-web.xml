<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    ">
 
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />

	<bean class="org.springframework.data.repository.support.DomainClassConverter">
		<constructor-arg ref="conversionService" />
	</bean>

	<bean id="sortResolver" class="org.springframework.data.web.SortHandlerMethodArgumentResolver" />
	<bean id="pageableResolver" class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
		<constructor-arg ref="sortResolver" />
	</bean>

	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:argument-resolvers>
		<ref bean="sortResolver"/>
		<ref bean="pageableResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- <mvc:annotation-driven /> -->
	<!-- <bean class="org.springframework.data.web.config.SpringDataWebConfiguration" /> -->
	<!-- If you're using Spring HATEOAS as well register this one *instead* of the former -->
	<!-- <bean class="org.springframework.data.web.config.HateoasAwareSpringDataWebConfiguration" /> -->

    <context:component-scan base-package="com.med.firstapp.controller" />
    <context:component-scan base-package="com.med.firstapp.dao" />
    <context:component-scan base-package="com.med.firstapp.service" />
    <context:component-scan base-package="com.med.firstapp.provider" />
 
 	<mvc:resources mapping="/css/**" 		location="/css/" />
  	<mvc:resources mapping="/js/**" 		location="/js/" />
  	<mvc:resources mapping="/images/**" 	location="/images/" />
 
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename">
            <value>messages</value>
        </property>
    </bean>

<!-- ViewResolver to use JspTemplates -->
<!--     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!--         <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> -->
<!--         <property name="prefix"> -->
<!--             <value>/WEB-INF/views/jspTemplates/</value> -->
<!--         </property> -->
<!--         <property name="suffix"> -->
<!--             <value>.jsp</value> -->
<!--         </property> -->
<!--     </bean> -->



	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <property name="definitions">
	        <list>
	            <value>/WEB-INF/views/tiles/tiles.xml</value>
	        </list>
	    </property>
	</bean>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<property name="order" value="2" /><!-- lower order value has a higher priority -->
		<property name="viewNames" value="tiles/*" />
	</bean>
	
	<!-- An other way to configure viewResolver -->
<!-- 	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> -->
<!-- 	    <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/> -->
<!-- 	</bean> -->


	<bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		 <property name="prefix" value="/WEB-INF/views/thymeleaf/" />
		 <property name="suffix" value=".html" />
		 <property name="templateMode" value="HTML" />
		 <property name="cacheable" value="false" />
	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		 <property name="templateResolver" ref="templateResolver" />
		 <property name="enableSpringELCompiler" value="true" />
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="order" value="1" />
	</bean>

</beans>